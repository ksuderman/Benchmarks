{
    "run": "2",
    "cloud": "c4",
    "job_conf": "Default",
    "workflow_id": "576169e85cfeb2a8",
    "history_id": "5e75cd2e92665559",
    "inputs": "SRR24043307-5GB GRCh38.p14.gbff.gz",
    "metrics": {
        "model_class": "Job",
        "id": "c422807868bcc4d8",
        "state": "ok",
        "exit_code": 0,
        "update_time": "2024-02-11T07:44:07.037575",
        "create_time": "2024-02-11T05:56:02.776208",
        "galaxy_version": "23.1",
        "command_version": "",
        "copied_from_job_id": null,
        "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.2",
        "history_id": "5e75cd2e92665559",
        "external_id": "gxy-galaxy-galaxy-m949h",
        "command_line": "set -o | grep -q pipefail && set -o pipefail;  ln -s '/galaxy/server/database/objects/5/f/4/dataset_5f466e4f-575c-4da4-acb3-690791d2fbb8.dat' 'localref.fa' && bwa index 'localref.fa' &&    bwa mem  -t \"${GALAXY_SLOTS:-1}\" -v 1     -T '30' -h '5'    -Y   -q                'localref.fa' '/galaxy/server/database/objects/7/7/8/dataset_77819660-4f02-4b74-ab8b-b81ad43a5386.dat' '/galaxy/server/database/objects/4/e/a/dataset_4ea68879-ecff-4935-b678-14f207b21966.dat'  | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/8/8/8/dataset_8884e679-9e55-48a0-86fc-78ba1843ebd8.dat'",
        "traceback": null,
        "params": {
            "__input_ext": "\"fasta\"",
            "dbkey": "\"?\"",
            "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
            "__workflow_invocation_uuid__": "\"3c9e94a8c8a211eeaa4f368873019f56\"",
            "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}",
            "reference_source": "{\"__current_case__\": 1, \"index_a\": \"auto\", \"ref_file\": {\"values\": [{\"id\": 109, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}",
            "output_sort": "\"coordinate\"",
            "fastq_input": "{\"__current_case__\": 2, \"fastq_input1\": {\"values\": [{\"id\": 94, \"src\": \"dce\"}]}, \"fastq_input_selector\": \"paired_collection\", \"iset_stats\": \"\"}",
            "analysis_type": "{\"__current_case__\": 4, \"algorithmic_options\": {\"__current_case__\": 1, \"algorithmic_options_selector\": \"do_not_set\"}, \"analysis_type_selector\": \"full\", \"io_options\": {\"C\": false, \"M\": false, \"T\": \"30\", \"V\": false, \"Y\": true, \"__current_case__\": 0, \"a\": false, \"five\": false, \"h\": \"5\", \"io_options_selector\": \"set\", \"q\": true}, \"scoring_options\": {\"__current_case__\": 1, \"scoring_options_selector\": \"do_not_set\"}}"
        },
        "inputs": {
            "reference_source|ref_file": {
                "id": "e99c11a8350738fe",
                "src": "hda",
                "uuid": "5f466e4f-575c-4da4-acb3-690791d2fbb8"
            },
            "fastq_input|fastq_input11": {
                "id": "359eeb08f4b7142c",
                "src": "hda",
                "uuid": "77819660-4f02-4b74-ab8b-b81ad43a5386"
            },
            "fastq_input|fastq_input12": {
                "id": "ea0c51384854c858",
                "src": "hda",
                "uuid": "4ea68879-ecff-4935-b678-14f207b21966"
            }
        },
        "outputs": {
            "bam_output": {
                "id": "c4aa77b3b2870b8e",
                "src": "hda",
                "uuid": "8884e679-9e55-48a0-86fc-78ba1843ebd8"
            }
        },
        "output_collections": {
            "bam_output": {
                "id": "2fe44cf5e1b73311",
                "src": "hdca"
            }
        },
        "tool_stdout": "",
        "tool_stderr": "[bwa_index] Pack FASTA... 21.33 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=6597824124, availableWord=476246928\n[BWTIncConstructFromPacked] 10 iterations done. 99999996 characters processed.\n[BWTIncConstructFromPacked] 20 iterations done. 199999996 characters processed.\n[BWTIncConstructFromPacked] 30 iterations done. 299999996 characters processed.\n[BWTIncConstructFromPacked] 40 iterations done. 399999996 characters processed.\n[BWTIncConstructFromPacked] 50 iterations done. 499999996 characters processed.\n[BWTIncConstructFromPacked] 60 iterations done. 599999996 characters processed.\n[BWTIncConstructFromPacked] 70 iterations done. 699999996 characters processed.\n[BWTIncConstructFromPacked] 80 iterations done. 799999996 characters processed.\n[BWTIncConstructFromPacked] 90 iterations done. 899999996 characters processed.\n[BWTIncConstructFromPacked] 100 iterations done. 999999996 characters processed.\n[BWTIncConstructFromPacked] 110 iterations done. 1099999996 characters processed.\n[BWTIncConstructFromPacked] 120 iterations done. 1199999996 characters processed.\n[BWTIncConstructFromPacked] 130 iterations done. 1299999996 characters processed.\n[BWTIncConstructFromPacked] 140 iterations done. 1399999996 characters processed.\n[BWTIncConstructFromPacked] 150 iterations done. 1499999996 characters processed.\n[BWTIncConstructFromPacked] 160 iterations done. 1599999996 characters processed.\n[BWTIncConstructFromPacked] 170 iterations done. 1699999996 characters processed.\n[BWTIncConstructFromPacked] 180 iterations done. 1799999996 characters processed.\n[BWTIncConstructFromPacked] 190 iterations done. 1899999996 characters processed.\n[BWTIncConstructFromPacked] 200 iterations done. 1999999996 characters processed.\n[BWTIncConstructFromPacked] 210 iterations done. 2099999996 characters processed.\n[BWTIncConstructFromPacked] 220 iterations done. 2199999996 characters processed.\n[BWTIncConstructFromPacked] 230 iterations done. 2299999996 characters processed.\n[BWTIncConstructFromPacked] 240 iterations done. 2399999996 characters processed.\n[BWTIncConstructFromPacked] 250 iterations done. 2499999996 characters processed.\n[BWTIncConstructFromPacked] 260 iterations done. 2599999996 characters processed.\n[BWTIncConstructFromPacked] 270 iterations done. 2699999996 characters processed.\n[BWTIncConstructFromPacked] 280 iterations done. 2799999996 characters processed.\n[BWTIncConstructFromPacked] 290 iterations done. 2899999996 characters processed.\n[BWTIncConstructFromPacked] 300 iterations done. 2999999996 characters processed.\n[BWTIncConstructFromPacked] 310 iterations done. 3099999996 characters processed.\n[BWTIncConstructFromPacked] 320 iterations done. 3199999996 characters processed.\n[BWTIncConstructFromPacked] 330 iterations done. 3299999996 characters processed.\n[BWTIncConstructFromPacked] 340 iterations done. 3399999996 characters processed.\n[BWTIncConstructFromPacked] 350 iterations done. 3499999996 characters processed.\n[BWTIncConstructFromPacked] 360 iterations done. 3599999996 characters processed.\n[BWTIncConstructFromPacked] 370 iterations done. 3699999996 characters processed.\n[BWTIncConstructFromPacked] 380 iterations done. 3799999996 characters processed.\n[BWTIncConstructFromPacked] 390 iterations done. 3899999996 characters processed.\n[BWTIncConstructFromPacked] 400 iterations done. 3999999996 characters processed.\n[BWTIncConstructFromPacked] 410 iterations done. 4099999996 characters processed.\n[BWTIncConstructFromPacked] 420 iterations done. 4199999996 characters processed.\n[BWTIncConstructFromPacked] 430 iterations done. 4299999996 characters processed.\n[BWTIncConstructFromPacked] 440 iterations done. 4399999996 characters processed.\n[BWTIncConstructFromPacked] 450 iterations done. 4499999996 characters processed.\n[BWTIncConstructFromPacked] 460 iterations done. 4599999996 characters processed.\n[BWTIncConstructFromPacked] 470 iterations done. 4699999996 characters processed.\n[BWTIncConstructFromPacked] 480 iterations done. 4799999996 characters processed.\n[BWTIncConstructFromPacked] 490 iterations done. 4899999996 characters processed.\n[BWTIncConstructFromPacked] 500 iterations done. 4999999996 characters processed.\n[BWTIncConstructFromPacked] 510 iterations done. 5099999996 characters processed.\n[BWTIncConstructFromPacked] 520 iterations done. 5199999996 characters processed.\n[BWTIncConstructFromPacked] 530 iterations done. 5299999996 characters processed.\n[BWTIncConstructFromPacked] 540 iterations done. 5399999996 characters processed.\n[BWTIncConstructFromPacked] 550 iterations done. 5499999996 characters processed.\n[BWTIncConstructFromPacked] 560 iterations done. 5599999996 characters processed.\n[BWTIncConstructFromPacked] 570 iterations done. 5699999996 characters processed.\n[BWTIncConstructFromPacked] 580 iterations done. 5799999996 characters processed.\n[BWTIncConstructFromPacked] 590 iterations done. 5899999996 characters processed.\n[BWTIncConstructFromPacked] 600 iterations done. 5996595708 characters processed.\n[BWTIncConstructFromPacked] 610 iterations done. 6082717196 characters processed.\n[BWTIncConstructFromPacked] 620 iterations done. 6159258204 characters processed.\n[BWTIncConstructFromPacked] 630 iterations done. 6227284028 characters processed.\n[BWTIncConstructFromPacked] 640 iterations done. 6287741548 characters processed.\n[BWTIncConstructFromPacked] 650 iterations done. 6341472300 characters processed.\n[BWTIncConstructFromPacked] 660 iterations done. 6389224348 characters processed.\n[BWTIncConstructFromPacked] 670 iterations done. 6431662444 characters processed.\n[BWTIncConstructFromPacked] 680 iterations done. 6469377532 characters processed.\n[BWTIncConstructFromPacked] 690 iterations done. 6502894748 characters processed.\n[BWTIncConstructFromPacked] 700 iterations done. 6532680908 characters processed.\n[BWTIncConstructFromPacked] 710 iterations done. 6559150860 characters processed.\n[BWTIncConstructFromPacked] 720 iterations done. 6582673420 characters processed.\n[bwt_gen] Finished constructing BWT in 728 iterations.\n[bwa_index] 2486.70 seconds elapse.\n[bwa_index] Update BWT... 14.53 sec\n[bwa_index] Pack forward-only FASTA... 11.83 sec\n[bwa_index] Construct SA from BWT and Occ... 1327.96 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 3939.421 sec; CPU: 3862.348 sec\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (72, 110, 224)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 528)\n[M::mem_pestat] mean and std.dev: (121.62, 100.49)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 680)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 351)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 799)\n[M::mem_pestat] mean and std.dev: (197.48, 123.60)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1023)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 167, 3650)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10846)\n[M::mem_pestat] mean and std.dev: (1837.20, 2398.76)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 14444)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (68, 106, 289)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 731)\n[M::mem_pestat] mean and std.dev: (134.44, 139.83)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 952)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (66, 113, 175)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 393)\n[M::mem_pestat] mean and std.dev: (107.05, 68.93)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 502)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 184, 357)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 817)\n[M::mem_pestat] mean and std.dev: (199.17, 126.92)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1047)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (84, 348, 1962)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5718)\n[M::mem_pestat] mean and std.dev: (957.08, 1094.64)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 7596)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (85, 165, 272)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)\n[M::mem_pestat] mean and std.dev: (152.72, 114.75)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 833)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (44, 73, 149)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 359)\n[M::mem_pestat] mean and std.dev: (85.46, 70.43)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 464)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 184, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (198.73, 125.68)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 529, 945)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2731)\n[M::mem_pestat] mean and std.dev: (429.00, 457.48)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3624)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (114, 195, 2053)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5931)\n[M::mem_pestat] mean and std.dev: (733.83, 1068.62)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 7870)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (62, 138, 644)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1808)\n[M::mem_pestat] mean and std.dev: (256.86, 353.42)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2390)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (128, 185, 359)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 821)\n[M::mem_pestat] mean and std.dev: (199.98, 127.75)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (54, 251, 1283)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3741)\n[M::mem_pestat] mean and std.dev: (604.67, 704.91)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 4970)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (70, 112, 191)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)\n[M::mem_pestat] mean and std.dev: (110.44, 63.38)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 554)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (49, 85, 229)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 589)\n[M::mem_pestat] mean and std.dev: (103.32, 108.71)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 769)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 356)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 814)\n[M::mem_pestat] mean and std.dev: (199.20, 127.25)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1043)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (89, 157, 1644)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4754)\n[M::mem_pestat] mean and std.dev: (814.81, 1117.28)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 6309)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (70, 113, 319)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 817)\n[M::mem_pestat] mean and std.dev: (144.95, 158.53)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1066)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (44, 70, 190)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 482)\n[M::mem_pestat] mean and std.dev: (67.81, 44.68)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 628)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (198.29, 125.40)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (122, 267, 2699)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7853)\n[M::mem_pestat] mean and std.dev: (1255.89, 1630.26)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 10430)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (75, 152, 311)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 783)\n[M::mem_pestat] mean and std.dev: (148.41, 128.13)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1019)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (86, 127, 269)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 635)\n[M::mem_pestat] mean and std.dev: (139.92, 91.21)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 818)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (128, 185, 361)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 827)\n[M::mem_pestat] mean and std.dev: (201.11, 129.61)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1060)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (71, 815, 1697)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4949)\n[M::mem_pestat] mean and std.dev: (928.60, 1189.73)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 6575)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (62, 109, 202)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 482)\n[M::mem_pestat] mean and std.dev: (114.71, 79.68)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 622)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] an\n..\n (1, 1744)\n[M::mem_pestat] mean and std.dev: (239.53, 327.32)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2307)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 356)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 814)\n[M::mem_pestat] mean and std.dev: (198.89, 127.08)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1043)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (85, 265, 827)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2311)\n[M::mem_pestat] mean and std.dev: (470.10, 535.21)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3053)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (75, 140, 417)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1101)\n[M::mem_pestat] mean and std.dev: (152.96, 172.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1443)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (39, 98, 236)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 630)\n[M::mem_pestat] mean and std.dev: (101.02, 86.88)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 827)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 352)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)\n[M::mem_pestat] mean and std.dev: (197.02, 124.26)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1027)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (83, 752, 2621)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7697)\n[M::mem_pestat] mean and std.dev: (1485.00, 1800.24)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 10235)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (79, 121, 515)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1387)\n[M::mem_pestat] mean and std.dev: (256.35, 365.96)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1823)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (72, 175, 381)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 999)\n[M::mem_pestat] mean and std.dev: (166.95, 177.54)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1308)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 350)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 796)\n[M::mem_pestat] mean and std.dev: (196.35, 123.23)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1019)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (37, 112, 2042)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6052)\n[M::mem_pestat] mean and std.dev: (770.12, 1247.39)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 8057)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (92, 138, 727)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1997)\n[M::mem_pestat] mean and std.dev: (226.92, 316.02)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2632)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (72, 128, 268)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 660)\n[M::mem_pestat] mean and std.dev: (121.24, 88.01)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 856)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 352)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)\n[M::mem_pestat] mean and std.dev: (197.32, 124.09)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1027)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (64, 191, 874)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2494)\n[M::mem_pestat] mean and std.dev: (285.68, 393.79)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3304)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (80, 119, 601)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1643)\n[M::mem_pestat] mean and std.dev: (300.21, 423.78)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2164)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (37, 122, 192)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 502)\n[M::mem_pestat] mean and std.dev: (94.65, 73.11)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 357)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 817)\n[M::mem_pestat] mean and std.dev: (199.12, 126.94)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1047)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (58, 213, 745)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2119)\n[M::mem_pestat] mean and std.dev: (272.15, 363.05)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2806)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 106, 213)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 535)\n[M::mem_pestat] mean and std.dev: (94.56, 53.00)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 696)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (44, 75, 237)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)\n[M::mem_pestat] mean and std.dev: (83.32, 68.71)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 816)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (197.97, 125.60)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (48, 177, 2177)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6435)\n[M::mem_pestat] mean and std.dev: (1097.45, 1661.83)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 8564)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (73, 110, 264)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)\n[M::mem_pestat] mean and std.dev: (104.42, 53.03)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 837)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (64, 115, 222)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 538)\n[M::mem_pestat] mean and std.dev: (120.76, 108.23)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 696)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 355)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)\n[M::mem_pestat] mean and std.dev: (198.38, 126.13)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (109, 507, 1039)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2899)\n[M::mem_pestat] mean and std.dev: (699.56, 806.20)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3924)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (89, 179, 1145)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3257)\n[M::mem_pestat] mean and std.dev: (616.28, 803.98)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 4313)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (54, 98, 219)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 549)\n[M::mem_pestat] mean and std.dev: (105.12, 89.02)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 714)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (197.42, 125.39)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (31, 851, 3112)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9274)\n[M::mem_pestat] mean and std.dev: (1578.95, 1881.30)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 12355)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (40, 62, 182)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 466)\n[M::mem_pestat] mean and std.dev: (89.00, 82.03)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 608)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (57, 125, 263)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 675)\n[M::mem_pestat] mean and std.dev: (122.14, 113.37)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 881)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 355)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)\n[M::mem_pestat] mean and std.dev: (197.82, 125.45)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (95, 381, 904)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2522)\n[M::mem_pestat] mean and std.dev: (422.22, 434.45)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3331)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (78, 114, 338)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 858)\n[M::mem_pestat] mean and std.dev: (133.19, 96.69)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1118)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (48, 90, 143)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 333)\n[M::mem_pestat] mean and std.dev: (92.36, 58.10)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 428)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 352)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)\n[M::mem_pestat] mean and std.dev: (197.30, 124.89)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1027)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (57, 264, 1094)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3168)\n[M::mem_pestat] mean and std.dev: (661.82, 862.66)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 4205)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 87, 184)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 448)\n[M::mem_pestat] mean and std.dev: (108.04, 65.87)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 580)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (35, 93, 291)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 803)\n[M::mem_pestat] mean and std.dev: (108.29, 128.63)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1059)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (197.28, 125.39)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (264, 1431, 2535)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7077)\n[M::mem_pestat] mean and std.dev: (1752.09, 1857.68)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 9348)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (67, 118, 252)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 622)\n[M::mem_pestat] mean and std.dev: (130.56, 88.59)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 807)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 355)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)\n[M::mem_pestat] mean and std.dev: (197.45, 125.85)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -t 8 -v 1 -T 30 -h 5 -Y -q localref.fa /galaxy/server/database/objects/7/7/8/dataset_77819660-4f02-4b74-ab8b-b81ad43a5386.dat /galaxy/server/database/objects/4/e/a/dataset_4ea68879-ecff-4935-b678-14f207b21966.dat\n[main] Real time: 2041.017 sec; CPU: 15186.037 sec\n[bam_sort_core] merging from 32 files and 8 in-memory blocks...\n",
        "job_stdout": "",
        "job_stderr": "",
        "stderr": "[bwa_index] Pack FASTA... 21.33 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=6597824124, availableWord=476246928\n[BWTIncConstructFromPacked] 10 iterations done. 99999996 characters processed.\n[BWTIncConstructFromPacked] 20 iterations done. 199999996 characters processed.\n[BWTIncConstructFromPacked] 30 iterations done. 299999996 characters processed.\n[BWTIncConstructFromPacked] 40 iterations done. 399999996 characters processed.\n[BWTIncConstructFromPacked] 50 iterations done. 499999996 characters processed.\n[BWTIncConstructFromPacked] 60 iterations done. 599999996 characters processed.\n[BWTIncConstructFromPacked] 70 iterations done. 699999996 characters processed.\n[BWTIncConstructFromPacked] 80 iterations done. 799999996 characters processed.\n[BWTIncConstructFromPacked] 90 iterations done. 899999996 characters processed.\n[BWTIncConstructFromPacked] 100 iterations done. 999999996 characters processed.\n[BWTIncConstructFromPacked] 110 iterations done. 1099999996 characters processed.\n[BWTIncConstructFromPacked] 120 iterations done. 1199999996 characters processed.\n[BWTIncConstructFromPacked] 130 iterations done. 1299999996 characters processed.\n[BWTIncConstructFromPacked] 140 iterations done. 1399999996 characters processed.\n[BWTIncConstructFromPacked] 150 iterations done. 1499999996 characters processed.\n[BWTIncConstructFromPacked] 160 iterations done. 1599999996 characters processed.\n[BWTIncConstructFromPacked] 170 iterations done. 1699999996 characters processed.\n[BWTIncConstructFromPacked] 180 iterations done. 1799999996 characters processed.\n[BWTIncConstructFromPacked] 190 iterations done. 1899999996 characters processed.\n[BWTIncConstructFromPacked] 200 iterations done. 1999999996 characters processed.\n[BWTIncConstructFromPacked] 210 iterations done. 2099999996 characters processed.\n[BWTIncConstructFromPacked] 220 iterations done. 2199999996 characters processed.\n[BWTIncConstructFromPacked] 230 iterations done. 2299999996 characters processed.\n[BWTIncConstructFromPacked] 240 iterations done. 2399999996 characters processed.\n[BWTIncConstructFromPacked] 250 iterations done. 2499999996 characters processed.\n[BWTIncConstructFromPacked] 260 iterations done. 2599999996 characters processed.\n[BWTIncConstructFromPacked] 270 iterations done. 2699999996 characters processed.\n[BWTIncConstructFromPacked] 280 iterations done. 2799999996 characters processed.\n[BWTIncConstructFromPacked] 290 iterations done. 2899999996 characters processed.\n[BWTIncConstructFromPacked] 300 iterations done. 2999999996 characters processed.\n[BWTIncConstructFromPacked] 310 iterations done. 3099999996 characters processed.\n[BWTIncConstructFromPacked] 320 iterations done. 3199999996 characters processed.\n[BWTIncConstructFromPacked] 330 iterations done. 3299999996 characters processed.\n[BWTIncConstructFromPacked] 340 iterations done. 3399999996 characters processed.\n[BWTIncConstructFromPacked] 350 iterations done. 3499999996 characters processed.\n[BWTIncConstructFromPacked] 360 iterations done. 3599999996 characters processed.\n[BWTIncConstructFromPacked] 370 iterations done. 3699999996 characters processed.\n[BWTIncConstructFromPacked] 380 iterations done. 3799999996 characters processed.\n[BWTIncConstructFromPacked] 390 iterations done. 3899999996 characters processed.\n[BWTIncConstructFromPacked] 400 iterations done. 3999999996 characters processed.\n[BWTIncConstructFromPacked] 410 iterations done. 4099999996 characters processed.\n[BWTIncConstructFromPacked] 420 iterations done. 4199999996 characters processed.\n[BWTIncConstructFromPacked] 430 iterations done. 4299999996 characters processed.\n[BWTIncConstructFromPacked] 440 iterations done. 4399999996 characters processed.\n[BWTIncConstructFromPacked] 450 iterations done. 4499999996 characters processed.\n[BWTIncConstructFromPacked] 460 iterations done. 4599999996 characters processed.\n[BWTIncConstructFromPacked] 470 iterations done. 4699999996 characters processed.\n[BWTIncConstructFromPacked] 480 iterations done. 4799999996 characters processed.\n[BWTIncConstructFromPacked] 490 iterations done. 4899999996 characters processed.\n[BWTIncConstructFromPacked] 500 iterations done. 4999999996 characters processed.\n[BWTIncConstructFromPacked] 510 iterations done. 5099999996 characters processed.\n[BWTIncConstructFromPacked] 520 iterations done. 5199999996 characters processed.\n[BWTIncConstructFromPacked] 530 iterations done. 5299999996 characters processed.\n[BWTIncConstructFromPacked] 540 iterations done. 5399999996 characters processed.\n[BWTIncConstructFromPacked] 550 iterations done. 5499999996 characters processed.\n[BWTIncConstructFromPacked] 560 iterations done. 5599999996 characters processed.\n[BWTIncConstructFromPacked] 570 iterations done. 5699999996 characters processed.\n[BWTIncConstructFromPacked] 580 iterations done. 5799999996 characters processed.\n[BWTIncConstructFromPacked] 590 iterations done. 5899999996 characters processed.\n[BWTIncConstructFromPacked] 600 iterations done. 5996595708 characters processed.\n[BWTIncConstructFromPacked] 610 iterations done. 6082717196 characters processed.\n[BWTIncConstructFromPacked] 620 iterations done. 6159258204 characters processed.\n[BWTIncConstructFromPacked] 630 iterations done. 6227284028 characters processed.\n[BWTIncConstructFromPacked] 640 iterations done. 6287741548 characters processed.\n[BWTIncConstructFromPacked] 650 iterations done. 6341472300 characters processed.\n[BWTIncConstructFromPacked] 660 iterations done. 6389224348 characters processed.\n[BWTIncConstructFromPacked] 670 iterations done. 6431662444 characters processed.\n[BWTIncConstructFromPacked] 680 iterations done. 6469377532 characters processed.\n[BWTIncConstructFromPacked] 690 iterations done. 6502894748 characters processed.\n[BWTIncConstructFromPacked] 700 iterations done. 6532680908 characters processed.\n[BWTIncConstructFromPacked] 710 iterations done. 6559150860 characters processed.\n[BWTIncConstructFromPacked] 720 iterations done. 6582673420 characters processed.\n[bwt_gen] Finished constructing BWT in 728 iterations.\n[bwa_index] 2486.70 seconds elapse.\n[bwa_index] Update BWT... 14.53 sec\n[bwa_index] Pack forward-only FASTA... 11.83 sec\n[bwa_index] Construct SA from BWT and Occ... 1327.96 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 3939.421 sec; CPU: 3862.348 sec\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (72, 110, 224)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 528)\n[M::mem_pestat] mean and std.dev: (121.62, 100.49)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 680)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 351)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 799)\n[M::mem_pestat] mean and std.dev: (197.48, 123.60)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1023)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 167, 3650)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 10846)\n[M::mem_pestat] mean and std.dev: (1837.20, 2398.76)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 14444)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (68, 106, 289)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 731)\n[M::mem_pestat] mean and std.dev: (134.44, 139.83)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 952)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (66, 113, 175)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 393)\n[M::mem_pestat] mean and std.dev: (107.05, 68.93)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 502)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 184, 357)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 817)\n[M::mem_pestat] mean and std.dev: (199.17, 126.92)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1047)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (84, 348, 1962)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5718)\n[M::mem_pestat] mean and std.dev: (957.08, 1094.64)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 7596)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (85, 165, 272)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)\n[M::mem_pestat] mean and std.dev: (152.72, 114.75)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 833)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (44, 73, 149)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 359)\n[M::mem_pestat] mean and std.dev: (85.46, 70.43)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 464)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 184, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (198.73, 125.68)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 529, 945)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2731)\n[M::mem_pestat] mean and std.dev: (429.00, 457.48)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3624)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (114, 195, 2053)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5931)\n[M::mem_pestat] mean and std.dev: (733.83, 1068.62)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 7870)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (62, 138, 644)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1808)\n[M::mem_pestat] mean and std.dev: (256.86, 353.42)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2390)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (128, 185, 359)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 821)\n[M::mem_pestat] mean and std.dev: (199.98, 127.75)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1052)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (54, 251, 1283)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3741)\n[M::mem_pestat] mean and std.dev: (604.67, 704.91)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 4970)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (70, 112, 191)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)\n[M::mem_pestat] mean and std.dev: (110.44, 63.38)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 554)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (49, 85, 229)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 589)\n[M::mem_pestat] mean and std.dev: (103.32, 108.71)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 769)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 356)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 814)\n[M::mem_pestat] mean and std.dev: (199.20, 127.25)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1043)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (89, 157, 1644)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4754)\n[M::mem_pestat] mean and std.dev: (814.81, 1117.28)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 6309)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (70, 113, 319)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 817)\n[M::mem_pestat] mean and std.dev: (144.95, 158.53)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1066)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (44, 70, 190)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 482)\n[M::mem_pestat] mean and std.dev: (67.81, 44.68)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 628)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (198.29, 125.40)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (122, 267, 2699)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7853)\n[M::mem_pestat] mean and std.dev: (1255.89, 1630.26)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 10430)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (75, 152, 311)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 783)\n[M::mem_pestat] mean and std.dev: (148.41, 128.13)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1019)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (86, 127, 269)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 635)\n[M::mem_pestat] mean and std.dev: (139.92, 91.21)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 818)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (128, 185, 361)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 827)\n[M::mem_pestat] mean and std.dev: (201.11, 129.61)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1060)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (71, 815, 1697)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4949)\n[M::mem_pestat] mean and std.dev: (928.60, 1189.73)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 6575)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (62, 109, 202)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 482)\n[M::mem_pestat] mean and std.dev: (114.71, 79.68)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 622)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] an\n..\n (1, 1744)\n[M::mem_pestat] mean and std.dev: (239.53, 327.32)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2307)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 356)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 814)\n[M::mem_pestat] mean and std.dev: (198.89, 127.08)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1043)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (85, 265, 827)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2311)\n[M::mem_pestat] mean and std.dev: (470.10, 535.21)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3053)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (75, 140, 417)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1101)\n[M::mem_pestat] mean and std.dev: (152.96, 172.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1443)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (39, 98, 236)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 630)\n[M::mem_pestat] mean and std.dev: (101.02, 86.88)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 827)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 352)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)\n[M::mem_pestat] mean and std.dev: (197.02, 124.26)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1027)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (83, 752, 2621)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7697)\n[M::mem_pestat] mean and std.dev: (1485.00, 1800.24)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 10235)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (79, 121, 515)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1387)\n[M::mem_pestat] mean and std.dev: (256.35, 365.96)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1823)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (72, 175, 381)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 999)\n[M::mem_pestat] mean and std.dev: (166.95, 177.54)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1308)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 350)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 796)\n[M::mem_pestat] mean and std.dev: (196.35, 123.23)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1019)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (37, 112, 2042)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6052)\n[M::mem_pestat] mean and std.dev: (770.12, 1247.39)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 8057)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (92, 138, 727)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1997)\n[M::mem_pestat] mean and std.dev: (226.92, 316.02)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2632)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (72, 128, 268)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 660)\n[M::mem_pestat] mean and std.dev: (121.24, 88.01)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 856)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 352)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)\n[M::mem_pestat] mean and std.dev: (197.32, 124.09)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1027)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (64, 191, 874)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2494)\n[M::mem_pestat] mean and std.dev: (285.68, 393.79)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3304)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (80, 119, 601)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1643)\n[M::mem_pestat] mean and std.dev: (300.21, 423.78)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2164)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (37, 122, 192)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 502)\n[M::mem_pestat] mean and std.dev: (94.65, 73.11)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 657)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 357)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 817)\n[M::mem_pestat] mean and std.dev: (199.12, 126.94)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1047)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (58, 213, 745)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2119)\n[M::mem_pestat] mean and std.dev: (272.15, 363.05)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2806)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 106, 213)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 535)\n[M::mem_pestat] mean and std.dev: (94.56, 53.00)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 696)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (44, 75, 237)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 623)\n[M::mem_pestat] mean and std.dev: (83.32, 68.71)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 816)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (197.97, 125.60)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (48, 177, 2177)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6435)\n[M::mem_pestat] mean and std.dev: (1097.45, 1661.83)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 8564)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (73, 110, 264)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)\n[M::mem_pestat] mean and std.dev: (104.42, 53.03)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 837)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (64, 115, 222)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 538)\n[M::mem_pestat] mean and std.dev: (120.76, 108.23)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 696)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 355)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)\n[M::mem_pestat] mean and std.dev: (198.38, 126.13)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (109, 507, 1039)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2899)\n[M::mem_pestat] mean and std.dev: (699.56, 806.20)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3924)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (89, 179, 1145)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3257)\n[M::mem_pestat] mean and std.dev: (616.28, 803.98)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 4313)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (54, 98, 219)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 549)\n[M::mem_pestat] mean and std.dev: (105.12, 89.02)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 714)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (197.42, 125.39)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (31, 851, 3112)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9274)\n[M::mem_pestat] mean and std.dev: (1578.95, 1881.30)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 12355)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (40, 62, 182)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 466)\n[M::mem_pestat] mean and std.dev: (89.00, 82.03)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 608)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (57, 125, 263)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 675)\n[M::mem_pestat] mean and std.dev: (122.14, 113.37)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 881)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 355)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)\n[M::mem_pestat] mean and std.dev: (197.82, 125.45)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (95, 381, 904)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2522)\n[M::mem_pestat] mean and std.dev: (422.22, 434.45)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3331)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (78, 114, 338)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 858)\n[M::mem_pestat] mean and std.dev: (133.19, 96.69)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1118)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (48, 90, 143)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 333)\n[M::mem_pestat] mean and std.dev: (92.36, 58.10)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 428)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 352)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)\n[M::mem_pestat] mean and std.dev: (197.30, 124.89)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1027)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (57, 264, 1094)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3168)\n[M::mem_pestat] mean and std.dev: (661.82, 862.66)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 4205)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 87, 184)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 448)\n[M::mem_pestat] mean and std.dev: (108.04, 65.87)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 580)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (35, 93, 291)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 803)\n[M::mem_pestat] mean and std.dev: (108.29, 128.63)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1059)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (197.28, 125.39)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (264, 1431, 2535)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7077)\n[M::mem_pestat] mean and std.dev: (1752.09, 1857.68)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 9348)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (67, 118, 252)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 622)\n[M::mem_pestat] mean and std.dev: (130.56, 88.59)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 807)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 355)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)\n[M::mem_pestat] mean and std.dev: (197.45, 125.85)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -t 8 -v 1 -T 30 -h 5 -Y -q localref.fa /galaxy/server/database/objects/7/7/8/dataset_77819660-4f02-4b74-ab8b-b81ad43a5386.dat /galaxy/server/database/objects/4/e/a/dataset_4ea68879-ecff-4935-b678-14f207b21966.dat\n[main] Real time: 2041.017 sec; CPU: 15186.037 sec\n[bam_sort_core] merging from 32 files and 8 in-memory blocks...\n",
        "stdout": "",
        "job_messages": [],
        "dependencies": [],
        "user_email": "tests@fake.org",
        "job_metrics": [
            {
                "title": "Operating System",
                "value": "Linux gxy-galaxy-galaxy-m949h-k475l 5.15.0-1047-gke #52-Ubuntu SMP Mon Nov 13 02:39:43 UTC 2023 x86_64 GNU/Linux\n",
                "plugin": "uname",
                "name": "uname",
                "raw_value": "Linux gxy-galaxy-galaxy-m949h-k475l 5.15.0-1047-gke #52-Ubuntu SMP Mon Nov 13 02:39:43 UTC 2023 x86_64 GNU/Linux\n"
            },
            {
                "title": "Total System Swap",
                "value": "0 bytes",
                "plugin": "meminfo",
                "name": "swaptotal",
                "raw_value": "0E-7"
            },
            {
                "title": "Total System Memory",
                "value": "184.4 GB",
                "plugin": "meminfo",
                "name": "memtotal",
                "raw_value": "198046776.0000000"
            },
            {
                "title": "Processor Count",
                "value": "48",
                "plugin": "cpuinfo",
                "name": "processor_count",
                "raw_value": "48.0000000"
            },
            {
                "title": "Memory softlimit on cgroup",
                "value": "8.0 EB",
                "plugin": "cgroup",
                "name": "memory.soft_limit_in_bytes",
                "raw_value": "9223372036854771712.0000000"
            },
            {
                "title": "Was OOM Killer active?",
                "value": "No",
                "plugin": "cgroup",
                "name": "memory.oom_control.under_oom",
                "raw_value": "0E-7"
            },
            {
                "title": "OOM Control enabled",
                "value": "Yes",
                "plugin": "cgroup",
                "name": "memory.oom_control.oom_kill_disable",
                "raw_value": "0E-7"
            },
            {
                "title": "Max memory usage (MEM+SWP)",
                "value": "29.4 GB",
                "plugin": "cgroup",
                "name": "memory.memsw.max_usage_in_bytes",
                "raw_value": "31569838080.0000000"
            },
            {
                "title": "Memory limit on cgroup (MEM+SWP)",
                "value": "30.0 GB",
                "plugin": "cgroup",
                "name": "memory.memsw.limit_in_bytes",
                "raw_value": "32212254720.0000000"
            },
            {
                "title": "Max memory usage (MEM)",
                "value": "29.4 GB",
                "plugin": "cgroup",
                "name": "memory.max_usage_in_bytes",
                "raw_value": "31569838080.0000000"
            },
            {
                "title": "Memory limit on cgroup (MEM)",
                "value": "30.0 GB",
                "plugin": "cgroup",
                "name": "memory.limit_in_bytes",
                "raw_value": "32212254720.0000000"
            },
            {
                "title": "Failed to allocate memory count",
                "value": 0.0,
                "plugin": "cgroup",
                "name": "memory.failcnt",
                "raw_value": "0E-7"
            },
            {
                "title": "CPU Time",
                "value": "5 hours and 50 minutes",
                "plugin": "cgroup",
                "name": "cpuacct.usage",
                "raw_value": "21043755484433.0000000"
            },
            {
                "title": "Job Runtime (Wall Clock)",
                "value": "1 hour and 43 minutes",
                "plugin": "core",
                "name": "runtime_seconds",
                "raw_value": "6188.0000000"
            },
            {
                "title": "Job End Time",
                "value": "2024-02-11 07:43:05",
                "plugin": "core",
                "name": "end_epoch",
                "raw_value": "1707637385.0000000"
            },
            {
                "title": "Job Start Time",
                "value": "2024-02-11 05:59:57",
                "plugin": "core",
                "name": "start_epoch",
                "raw_value": "1707631197.0000000"
            },
            {
                "title": "Memory Allocated (MB)",
                "value": "32212",
                "plugin": "core",
                "name": "galaxy_memory_mb",
                "raw_value": "32212.0000000"
            },
            {
                "title": "Cores Allocated",
                "value": "8",
                "plugin": "core",
                "name": "galaxy_slots",
                "raw_value": "8.0000000"
            }
        ]
    },
    "status": "ok",
    "server": "http://34.139.129.229:8000/galaxy/",
    "ref_data_size": [],
    "input_data_size": [
        957932045,
        1289376399
    ]
}