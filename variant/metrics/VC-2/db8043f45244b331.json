{
    "run": "3",
    "cloud": "c4",
    "job_conf": "Default",
    "workflow_id": "576169e85cfeb2a8",
    "history_id": "ce93ece198eb3d49",
    "inputs": "SRR24043307-10GB GRCh38.p14.gbff.gz",
    "metrics": {
        "model_class": "Job",
        "id": "db8043f45244b331",
        "state": "ok",
        "exit_code": 0,
        "update_time": "2024-02-12T06:39:19.800427",
        "create_time": "2024-02-12T04:06:13.420304",
        "galaxy_version": "23.1",
        "command_version": "",
        "copied_from_job_id": null,
        "tool_id": "toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.2",
        "history_id": "ce93ece198eb3d49",
        "external_id": "gxy-galaxy-galaxy-l7tkj",
        "command_line": "set -o | grep -q pipefail && set -o pipefail;  ln -s '/galaxy/server/database/objects/e/c/3/dataset_ec35cd85-5c34-4aa6-8977-4c56531a19e6.dat' 'localref.fa' && bwa index 'localref.fa' &&    bwa mem  -t \"${GALAXY_SLOTS:-1}\" -v 1     -T '30' -h '5'    -Y   -q                'localref.fa' '/galaxy/server/database/objects/9/1/f/dataset_91f910b0-db09-42ec-9e0e-869db5c1e43b.dat' '/galaxy/server/database/objects/d/0/3/dataset_d032087f-5c51-46fb-93f9-1c2c0d6d545e.dat'  | samtools sort -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/galaxy/server/database/objects/7/5/c/dataset_75cf0581-2045-4cbd-aed0-383d0f84abcc.dat'",
        "traceback": null,
        "params": {
            "__input_ext": "\"fasta\"",
            "dbkey": "\"?\"",
            "chromInfo": "\"/cvmfs/data.galaxyproject.org/managed/len/ucsc/?.len\"",
            "__workflow_invocation_uuid__": "\"0f108108c95c11ee8c12368873019f56\"",
            "rg": "{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}",
            "reference_source": "{\"__current_case__\": 1, \"index_a\": \"auto\", \"ref_file\": {\"values\": [{\"id\": 199, \"src\": \"hda\"}]}, \"reference_source_selector\": \"history\"}",
            "output_sort": "\"coordinate\"",
            "fastq_input": "{\"__current_case__\": 2, \"fastq_input1\": {\"values\": [{\"id\": 173, \"src\": \"dce\"}]}, \"fastq_input_selector\": \"paired_collection\", \"iset_stats\": \"\"}",
            "analysis_type": "{\"__current_case__\": 4, \"algorithmic_options\": {\"__current_case__\": 1, \"algorithmic_options_selector\": \"do_not_set\"}, \"analysis_type_selector\": \"full\", \"io_options\": {\"C\": false, \"M\": false, \"T\": \"30\", \"V\": false, \"Y\": true, \"__current_case__\": 0, \"a\": false, \"five\": false, \"h\": \"5\", \"io_options_selector\": \"set\", \"q\": true}, \"scoring_options\": {\"__current_case__\": 1, \"scoring_options_selector\": \"do_not_set\"}}"
        },
        "inputs": {
            "fastq_input|fastq_input12": {
                "id": "88c82faa9633de65",
                "src": "hda",
                "uuid": "d032087f-5c51-46fb-93f9-1c2c0d6d545e"
            },
            "fastq_input|fastq_input11": {
                "id": "ca0b92cbd8ebd22e",
                "src": "hda",
                "uuid": "91f910b0-db09-42ec-9e0e-869db5c1e43b"
            },
            "reference_source|ref_file": {
                "id": "8b90764ee9443615",
                "src": "hda",
                "uuid": "ec35cd85-5c34-4aa6-8977-4c56531a19e6"
            }
        },
        "outputs": {
            "bam_output": {
                "id": "9dbaf6536a3af05b",
                "src": "hda",
                "uuid": "75cf0581-2045-4cbd-aed0-383d0f84abcc"
            }
        },
        "output_collections": {
            "bam_output": {
                "id": "0b0363d732364d52",
                "src": "hdca"
            }
        },
        "tool_stdout": "",
        "tool_stderr": "[bwa_index] Pack FASTA... 20.44 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=6597824124, availableWord=476246928\n[BWTIncConstructFromPacked] 10 iterations done. 99999996 characters processed.\n[BWTIncConstructFromPacked] 20 iterations done. 199999996 characters processed.\n[BWTIncConstructFromPacked] 30 iterations done. 299999996 characters processed.\n[BWTIncConstructFromPacked] 40 iterations done. 399999996 characters processed.\n[BWTIncConstructFromPacked] 50 iterations done. 499999996 characters processed.\n[BWTIncConstructFromPacked] 60 iterations done. 599999996 characters processed.\n[BWTIncConstructFromPacked] 70 iterations done. 699999996 characters processed.\n[BWTIncConstructFromPacked] 80 iterations done. 799999996 characters processed.\n[BWTIncConstructFromPacked] 90 iterations done. 899999996 characters processed.\n[BWTIncConstructFromPacked] 100 iterations done. 999999996 characters processed.\n[BWTIncConstructFromPacked] 110 iterations done. 1099999996 characters processed.\n[BWTIncConstructFromPacked] 120 iterations done. 1199999996 characters processed.\n[BWTIncConstructFromPacked] 130 iterations done. 1299999996 characters processed.\n[BWTIncConstructFromPacked] 140 iterations done. 1399999996 characters processed.\n[BWTIncConstructFromPacked] 150 iterations done. 1499999996 characters processed.\n[BWTIncConstructFromPacked] 160 iterations done. 1599999996 characters processed.\n[BWTIncConstructFromPacked] 170 iterations done. 1699999996 characters processed.\n[BWTIncConstructFromPacked] 180 iterations done. 1799999996 characters processed.\n[BWTIncConstructFromPacked] 190 iterations done. 1899999996 characters processed.\n[BWTIncConstructFromPacked] 200 iterations done. 1999999996 characters processed.\n[BWTIncConstructFromPacked] 210 iterations done. 2099999996 characters processed.\n[BWTIncConstructFromPacked] 220 iterations done. 2199999996 characters processed.\n[BWTIncConstructFromPacked] 230 iterations done. 2299999996 characters processed.\n[BWTIncConstructFromPacked] 240 iterations done. 2399999996 characters processed.\n[BWTIncConstructFromPacked] 250 iterations done. 2499999996 characters processed.\n[BWTIncConstructFromPacked] 260 iterations done. 2599999996 characters processed.\n[BWTIncConstructFromPacked] 270 iterations done. 2699999996 characters processed.\n[BWTIncConstructFromPacked] 280 iterations done. 2799999996 characters processed.\n[BWTIncConstructFromPacked] 290 iterations done. 2899999996 characters processed.\n[BWTIncConstructFromPacked] 300 iterations done. 2999999996 characters processed.\n[BWTIncConstructFromPacked] 310 iterations done. 3099999996 characters processed.\n[BWTIncConstructFromPacked] 320 iterations done. 3199999996 characters processed.\n[BWTIncConstructFromPacked] 330 iterations done. 3299999996 characters processed.\n[BWTIncConstructFromPacked] 340 iterations done. 3399999996 characters processed.\n[BWTIncConstructFromPacked] 350 iterations done. 3499999996 characters processed.\n[BWTIncConstructFromPacked] 360 iterations done. 3599999996 characters processed.\n[BWTIncConstructFromPacked] 370 iterations done. 3699999996 characters processed.\n[BWTIncConstructFromPacked] 380 iterations done. 3799999996 characters processed.\n[BWTIncConstructFromPacked] 390 iterations done. 3899999996 characters processed.\n[BWTIncConstructFromPacked] 400 iterations done. 3999999996 characters processed.\n[BWTIncConstructFromPacked] 410 iterations done. 4099999996 characters processed.\n[BWTIncConstructFromPacked] 420 iterations done. 4199999996 characters processed.\n[BWTIncConstructFromPacked] 430 iterations done. 4299999996 characters processed.\n[BWTIncConstructFromPacked] 440 iterations done. 4399999996 characters processed.\n[BWTIncConstructFromPacked] 450 iterations done. 4499999996 characters processed.\n[BWTIncConstructFromPacked] 460 iterations done. 4599999996 characters processed.\n[BWTIncConstructFromPacked] 470 iterations done. 4699999996 characters processed.\n[BWTIncConstructFromPacked] 480 iterations done. 4799999996 characters processed.\n[BWTIncConstructFromPacked] 490 iterations done. 4899999996 characters processed.\n[BWTIncConstructFromPacked] 500 iterations done. 4999999996 characters processed.\n[BWTIncConstructFromPacked] 510 iterations done. 5099999996 characters processed.\n[BWTIncConstructFromPacked] 520 iterations done. 5199999996 characters processed.\n[BWTIncConstructFromPacked] 530 iterations done. 5299999996 characters processed.\n[BWTIncConstructFromPacked] 540 iterations done. 5399999996 characters processed.\n[BWTIncConstructFromPacked] 550 iterations done. 5499999996 characters processed.\n[BWTIncConstructFromPacked] 560 iterations done. 5599999996 characters processed.\n[BWTIncConstructFromPacked] 570 iterations done. 5699999996 characters processed.\n[BWTIncConstructFromPacked] 580 iterations done. 5799999996 characters processed.\n[BWTIncConstructFromPacked] 590 iterations done. 5899999996 characters processed.\n[BWTIncConstructFromPacked] 600 iterations done. 5996595708 characters processed.\n[BWTIncConstructFromPacked] 610 iterations done. 6082717196 characters processed.\n[BWTIncConstructFromPacked] 620 iterations done. 6159258204 characters processed.\n[BWTIncConstructFromPacked] 630 iterations done. 6227284028 characters processed.\n[BWTIncConstructFromPacked] 640 iterations done. 6287741548 characters processed.\n[BWTIncConstructFromPacked] 650 iterations done. 6341472300 characters processed.\n[BWTIncConstructFromPacked] 660 iterations done. 6389224348 characters processed.\n[BWTIncConstructFromPacked] 670 iterations done. 6431662444 characters processed.\n[BWTIncConstructFromPacked] 680 iterations done. 6469377532 characters processed.\n[BWTIncConstructFromPacked] 690 iterations done. 6502894748 characters processed.\n[BWTIncConstructFromPacked] 700 iterations done. 6532680908 characters processed.\n[BWTIncConstructFromPacked] 710 iterations done. 6559150860 characters processed.\n[BWTIncConstructFromPacked] 720 iterations done. 6582673420 characters processed.\n[bwt_gen] Finished constructing BWT in 728 iterations.\n[bwa_index] 2587.83 seconds elapse.\n[bwa_index] Update BWT... 15.86 sec\n[bwa_index] Pack forward-only FASTA... 12.15 sec\n[bwa_index] Construct SA from BWT and Occ... 1373.70 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 4085.211 sec; CPU: 4009.984 sec\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (81, 110, 340)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 858)\n[M::mem_pestat] mean and std.dev: (149.50, 134.44)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1117)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 351)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 799)\n[M::mem_pestat] mean and std.dev: (197.35, 124.00)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1023)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (44, 111, 2378)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7046)\n[M::mem_pestat] mean and std.dev: (1071.65, 1681.20)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 9380)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (71, 116, 205)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 473)\n[M::mem_pestat] mean and std.dev: (107.70, 49.15)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 607)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (73, 175, 983)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2803)\n[M::mem_pestat] mean and std.dev: (415.57, 623.75)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3713)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 349)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 793)\n[M::mem_pestat] mean and std.dev: (196.31, 121.93)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1015)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (81, 617, 1379)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3975)\n[M::mem_pestat] mean and std.dev: (674.95, 889.03)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 5273)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (63, 162, 613)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1713)\n[M::mem_pestat] mean and std.dev: (224.28, 285.02)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2263)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (70, 133, 636)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1768)\n[M::mem_pestat] mean and std.dev: (307.64, 415.50)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2334)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (198.04, 125.18)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (72, 167, 1403)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)\n[M::mem_pestat] mean and std.dev: (685.17, 928.19)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 5396)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (85, 120, 201)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)\n[M::mem_pestat] mean and std.dev: (122.10, 59.33)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 549)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 104, 292)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 772)\n[M::mem_pestat] mean and std.dev: (125.03, 116.66)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1012)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 184, 355)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)\n[M::mem_pestat] mean and std.dev: (198.77, 126.50)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (84, 266, 1962)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5718)\n[M::mem_pestat] mean and std.dev: (1001.06, 1282.70)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 7596)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (92, 231, 2940)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8636)\n[M::mem_pestat] mean and std.dev: (1340.09, 1929.32)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 11484)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (63, 105, 548)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1518)\n[M::mem_pestat] mean and std.dev: (206.95, 286.86)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2003)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 352)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)\n[M::mem_pestat] mean and std.dev: (197.96, 124.37)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1027)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (53, 367, 664)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1886)\n[M::mem_pestat] mean and std.dev: (374.30, 386.92)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2497)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (50, 130, 222)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 566)\n[M::mem_pestat] mean and std.dev: (116.80, 77.12)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 108, 298)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 790)\n[M::mem_pestat] mean and std.dev: (147.70, 148.94)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1036)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (128, 184, 358)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 818)\n[M::mem_pestat] mean and std.dev: (199.84, 127.79)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1048)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (33, 225, 945)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2769)\n[M::mem_pestat] mean and std.dev: (344.23, 381.99)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3681)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (57, 101, 344)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 918)\n[M::mem_pestat] mean and std.dev: (107.56, 88.11)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1205)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (57, 122, 993)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2865)\n[M::mem_pestat] mean and std.dev: (475.88, 654.58)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3801)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (128, 185, 360)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 824)\n[M::mem_pestat] mean and std.dev: (200.58, 129.00)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1056)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (71, 642, 1112)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3194)\n[M::mem_pestat] mean and std.dev: (604.85, 612.36)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 4235)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (72, 141, 452)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1212)\n[M::mem_pestat] mean and std.dev: (190.19, 186.09)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1592)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::me\n..\nd.dev: (1, 641)\n[M::mem_pestat] mean and std.dev: (80.42, 66.29)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 839)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 353)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 805)\n[M::mem_pestat] mean and std.dev: (197.65, 125.35)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1031)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (25, 92, 4382)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13096)\n[M::mem_pestat] mean and std.dev: (1323.10, 2038.07)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 17453)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (63, 103, 239)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 591)\n[M::mem_pestat] mean and std.dev: (108.47, 67.49)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (55, 132, 231)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 583)\n[M::mem_pestat] mean and std.dev: (121.33, 94.22)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 358)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 820)\n[M::mem_pestat] mean and std.dev: (199.62, 128.30)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1051)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (165, 551, 1084)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2922)\n[M::mem_pestat] mean and std.dev: (758.28, 788.06)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3911)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (60, 92, 214)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 522)\n[M::mem_pestat] mean and std.dev: (108.60, 68.37)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 676)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (39, 99, 175)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 447)\n[M::mem_pestat] mean and std.dev: (96.27, 75.07)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 583)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 355)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)\n[M::mem_pestat] mean and std.dev: (198.38, 126.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (36, 254, 655)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1893)\n[M::mem_pestat] mean and std.dev: (264.36, 305.20)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2512)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (91, 615, 1942)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5644)\n[M::mem_pestat] mean and std.dev: (924.59, 980.13)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 7495)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (49, 83, 248)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)\n[M::mem_pestat] mean and std.dev: (120.43, 144.51)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 845)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 353)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 805)\n[M::mem_pestat] mean and std.dev: (197.57, 125.24)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1031)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (274, 1478, 3405)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9667)\n[M::mem_pestat] mean and std.dev: (2234.60, 2469.21)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 12798)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (41, 81, 136)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 326)\n[M::mem_pestat] mean and std.dev: (78.68, 46.41)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 421)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (40, 98, 212)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 556)\n[M::mem_pestat] mean and std.dev: (100.23, 81.55)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 728)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 351)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 799)\n[M::mem_pestat] mean and std.dev: (196.70, 123.65)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1023)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (38, 237, 963)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2813)\n[M::mem_pestat] mean and std.dev: (400.04, 487.83)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3738)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (48, 151, 954)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2766)\n[M::mem_pestat] mean and std.dev: (311.79, 473.96)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3672)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (48, 136, 370)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1014)\n[M::mem_pestat] mean and std.dev: (168.69, 211.74)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1336)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (197.48, 125.16)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (60, 381, 877)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2511)\n[M::mem_pestat] mean and std.dev: (309.96, 300.82)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3328)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (64, 89, 206)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 490)\n[M::mem_pestat] mean and std.dev: (109.25, 78.90)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 632)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (59, 92, 243)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 611)\n[M::mem_pestat] mean and std.dev: (119.36, 106.55)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (197.65, 125.30)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (32, 109, 852)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2492)\n[M::mem_pestat] mean and std.dev: (351.27, 466.86)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3312)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (66, 134, 1049)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3015)\n[M::mem_pestat] mean and std.dev: (259.60, 365.36)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3998)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (44, 98, 178)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 446)\n[M::mem_pestat] mean and std.dev: (110.60, 89.50)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 580)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 352)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)\n[M::mem_pestat] mean and std.dev: (197.48, 124.78)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1027)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (27, 527, 989)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2913)\n[M::mem_pestat] mean and std.dev: (618.32, 636.75)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3875)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 89, 199)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 493)\n[M::mem_pestat] mean and std.dev: (112.75, 69.14)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 640)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (42, 64, 127)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 297)\n[M::mem_pestat] mean and std.dev: (69.32, 48.12)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 382)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (126, 182, 352)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 804)\n[M::mem_pestat] mean and std.dev: (197.15, 125.24)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1030)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (57, 201, 1995)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5871)\n[M::mem_pestat] mean and std.dev: (751.95, 959.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 7809)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 103, 197)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 487)\n[M::mem_pestat] mean and std.dev: (107.59, 72.75)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 632)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (47, 103, 884)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2558)\n[M::mem_pestat] mean and std.dev: (272.87, 415.11)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3395)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 355)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)\n[M::mem_pestat] mean and std.dev: (197.72, 125.63)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (264, 484, 2305)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6387)\n[M::mem_pestat] mean and std.dev: (1528.29, 1928.34)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 9242)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (74, 176, 481)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1295)\n[M::mem_pestat] mean and std.dev: (239.89, 273.05)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1702)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (53, 97, 287)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 755)\n[M::mem_pestat] mean and std.dev: (110.80, 102.36)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 989)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (126, 182, 353)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 807)\n[M::mem_pestat] mean and std.dev: (197.26, 125.60)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1034)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (77, 508, 2209)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6473)\n[M::mem_pestat] mean and std.dev: (1245.30, 1554.50)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 8605)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (49, 116, 341)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 925)\n[M::mem_pestat] mean and std.dev: (107.79, 86.20)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1217)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (126, 181, 353)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 807)\n[M::mem_pestat] mean and std.dev: (196.60, 125.13)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1034)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -t 8 -v 1 -T 30 -h 5 -Y -q localref.fa /galaxy/server/database/objects/9/1/f/dataset_91f910b0-db09-42ec-9e0e-869db5c1e43b.dat /galaxy/server/database/objects/d/0/3/dataset_d032087f-5c51-46fb-93f9-1c2c0d6d545e.dat\n[main] Real time: 4050.945 sec; CPU: 29900.056 sec\n[bam_sort_core] merging from 72 files and 8 in-memory blocks...\n",
        "job_stdout": "",
        "job_stderr": "",
        "stderr": "[bwa_index] Pack FASTA... 20.44 sec\n[bwa_index] Construct BWT for the packed sequence...\n[BWTIncCreate] textLength=6597824124, availableWord=476246928\n[BWTIncConstructFromPacked] 10 iterations done. 99999996 characters processed.\n[BWTIncConstructFromPacked] 20 iterations done. 199999996 characters processed.\n[BWTIncConstructFromPacked] 30 iterations done. 299999996 characters processed.\n[BWTIncConstructFromPacked] 40 iterations done. 399999996 characters processed.\n[BWTIncConstructFromPacked] 50 iterations done. 499999996 characters processed.\n[BWTIncConstructFromPacked] 60 iterations done. 599999996 characters processed.\n[BWTIncConstructFromPacked] 70 iterations done. 699999996 characters processed.\n[BWTIncConstructFromPacked] 80 iterations done. 799999996 characters processed.\n[BWTIncConstructFromPacked] 90 iterations done. 899999996 characters processed.\n[BWTIncConstructFromPacked] 100 iterations done. 999999996 characters processed.\n[BWTIncConstructFromPacked] 110 iterations done. 1099999996 characters processed.\n[BWTIncConstructFromPacked] 120 iterations done. 1199999996 characters processed.\n[BWTIncConstructFromPacked] 130 iterations done. 1299999996 characters processed.\n[BWTIncConstructFromPacked] 140 iterations done. 1399999996 characters processed.\n[BWTIncConstructFromPacked] 150 iterations done. 1499999996 characters processed.\n[BWTIncConstructFromPacked] 160 iterations done. 1599999996 characters processed.\n[BWTIncConstructFromPacked] 170 iterations done. 1699999996 characters processed.\n[BWTIncConstructFromPacked] 180 iterations done. 1799999996 characters processed.\n[BWTIncConstructFromPacked] 190 iterations done. 1899999996 characters processed.\n[BWTIncConstructFromPacked] 200 iterations done. 1999999996 characters processed.\n[BWTIncConstructFromPacked] 210 iterations done. 2099999996 characters processed.\n[BWTIncConstructFromPacked] 220 iterations done. 2199999996 characters processed.\n[BWTIncConstructFromPacked] 230 iterations done. 2299999996 characters processed.\n[BWTIncConstructFromPacked] 240 iterations done. 2399999996 characters processed.\n[BWTIncConstructFromPacked] 250 iterations done. 2499999996 characters processed.\n[BWTIncConstructFromPacked] 260 iterations done. 2599999996 characters processed.\n[BWTIncConstructFromPacked] 270 iterations done. 2699999996 characters processed.\n[BWTIncConstructFromPacked] 280 iterations done. 2799999996 characters processed.\n[BWTIncConstructFromPacked] 290 iterations done. 2899999996 characters processed.\n[BWTIncConstructFromPacked] 300 iterations done. 2999999996 characters processed.\n[BWTIncConstructFromPacked] 310 iterations done. 3099999996 characters processed.\n[BWTIncConstructFromPacked] 320 iterations done. 3199999996 characters processed.\n[BWTIncConstructFromPacked] 330 iterations done. 3299999996 characters processed.\n[BWTIncConstructFromPacked] 340 iterations done. 3399999996 characters processed.\n[BWTIncConstructFromPacked] 350 iterations done. 3499999996 characters processed.\n[BWTIncConstructFromPacked] 360 iterations done. 3599999996 characters processed.\n[BWTIncConstructFromPacked] 370 iterations done. 3699999996 characters processed.\n[BWTIncConstructFromPacked] 380 iterations done. 3799999996 characters processed.\n[BWTIncConstructFromPacked] 390 iterations done. 3899999996 characters processed.\n[BWTIncConstructFromPacked] 400 iterations done. 3999999996 characters processed.\n[BWTIncConstructFromPacked] 410 iterations done. 4099999996 characters processed.\n[BWTIncConstructFromPacked] 420 iterations done. 4199999996 characters processed.\n[BWTIncConstructFromPacked] 430 iterations done. 4299999996 characters processed.\n[BWTIncConstructFromPacked] 440 iterations done. 4399999996 characters processed.\n[BWTIncConstructFromPacked] 450 iterations done. 4499999996 characters processed.\n[BWTIncConstructFromPacked] 460 iterations done. 4599999996 characters processed.\n[BWTIncConstructFromPacked] 470 iterations done. 4699999996 characters processed.\n[BWTIncConstructFromPacked] 480 iterations done. 4799999996 characters processed.\n[BWTIncConstructFromPacked] 490 iterations done. 4899999996 characters processed.\n[BWTIncConstructFromPacked] 500 iterations done. 4999999996 characters processed.\n[BWTIncConstructFromPacked] 510 iterations done. 5099999996 characters processed.\n[BWTIncConstructFromPacked] 520 iterations done. 5199999996 characters processed.\n[BWTIncConstructFromPacked] 530 iterations done. 5299999996 characters processed.\n[BWTIncConstructFromPacked] 540 iterations done. 5399999996 characters processed.\n[BWTIncConstructFromPacked] 550 iterations done. 5499999996 characters processed.\n[BWTIncConstructFromPacked] 560 iterations done. 5599999996 characters processed.\n[BWTIncConstructFromPacked] 570 iterations done. 5699999996 characters processed.\n[BWTIncConstructFromPacked] 580 iterations done. 5799999996 characters processed.\n[BWTIncConstructFromPacked] 590 iterations done. 5899999996 characters processed.\n[BWTIncConstructFromPacked] 600 iterations done. 5996595708 characters processed.\n[BWTIncConstructFromPacked] 610 iterations done. 6082717196 characters processed.\n[BWTIncConstructFromPacked] 620 iterations done. 6159258204 characters processed.\n[BWTIncConstructFromPacked] 630 iterations done. 6227284028 characters processed.\n[BWTIncConstructFromPacked] 640 iterations done. 6287741548 characters processed.\n[BWTIncConstructFromPacked] 650 iterations done. 6341472300 characters processed.\n[BWTIncConstructFromPacked] 660 iterations done. 6389224348 characters processed.\n[BWTIncConstructFromPacked] 670 iterations done. 6431662444 characters processed.\n[BWTIncConstructFromPacked] 680 iterations done. 6469377532 characters processed.\n[BWTIncConstructFromPacked] 690 iterations done. 6502894748 characters processed.\n[BWTIncConstructFromPacked] 700 iterations done. 6532680908 characters processed.\n[BWTIncConstructFromPacked] 710 iterations done. 6559150860 characters processed.\n[BWTIncConstructFromPacked] 720 iterations done. 6582673420 characters processed.\n[bwt_gen] Finished constructing BWT in 728 iterations.\n[bwa_index] 2587.83 seconds elapse.\n[bwa_index] Update BWT... 15.86 sec\n[bwa_index] Pack forward-only FASTA... 12.15 sec\n[bwa_index] Construct SA from BWT and Occ... 1373.70 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index localref.fa\n[main] Real time: 4085.211 sec; CPU: 4009.984 sec\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (81, 110, 340)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 858)\n[M::mem_pestat] mean and std.dev: (149.50, 134.44)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1117)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 351)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 799)\n[M::mem_pestat] mean and std.dev: (197.35, 124.00)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1023)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (44, 111, 2378)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 7046)\n[M::mem_pestat] mean and std.dev: (1071.65, 1681.20)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 9380)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (71, 116, 205)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 473)\n[M::mem_pestat] mean and std.dev: (107.70, 49.15)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 607)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (73, 175, 983)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2803)\n[M::mem_pestat] mean and std.dev: (415.57, 623.75)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3713)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 349)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 793)\n[M::mem_pestat] mean and std.dev: (196.31, 121.93)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1015)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (81, 617, 1379)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3975)\n[M::mem_pestat] mean and std.dev: (674.95, 889.03)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 5273)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (63, 162, 613)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1713)\n[M::mem_pestat] mean and std.dev: (224.28, 285.02)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2263)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (70, 133, 636)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1768)\n[M::mem_pestat] mean and std.dev: (307.64, 415.50)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2334)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (198.04, 125.18)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (72, 167, 1403)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4065)\n[M::mem_pestat] mean and std.dev: (685.17, 928.19)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 5396)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (85, 120, 201)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 433)\n[M::mem_pestat] mean and std.dev: (122.10, 59.33)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 549)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 104, 292)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 772)\n[M::mem_pestat] mean and std.dev: (125.03, 116.66)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1012)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 184, 355)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)\n[M::mem_pestat] mean and std.dev: (198.77, 126.50)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (84, 266, 1962)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5718)\n[M::mem_pestat] mean and std.dev: (1001.06, 1282.70)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 7596)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (92, 231, 2940)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 8636)\n[M::mem_pestat] mean and std.dev: (1340.09, 1929.32)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 11484)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (63, 105, 548)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1518)\n[M::mem_pestat] mean and std.dev: (206.95, 286.86)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2003)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 352)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)\n[M::mem_pestat] mean and std.dev: (197.96, 124.37)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1027)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (53, 367, 664)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1886)\n[M::mem_pestat] mean and std.dev: (374.30, 386.92)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2497)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (50, 130, 222)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 566)\n[M::mem_pestat] mean and std.dev: (116.80, 77.12)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 738)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 108, 298)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 790)\n[M::mem_pestat] mean and std.dev: (147.70, 148.94)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1036)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (128, 184, 358)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 818)\n[M::mem_pestat] mean and std.dev: (199.84, 127.79)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1048)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (33, 225, 945)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2769)\n[M::mem_pestat] mean and std.dev: (344.23, 381.99)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3681)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (57, 101, 344)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 918)\n[M::mem_pestat] mean and std.dev: (107.56, 88.11)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1205)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (57, 122, 993)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2865)\n[M::mem_pestat] mean and std.dev: (475.88, 654.58)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3801)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (128, 185, 360)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 824)\n[M::mem_pestat] mean and std.dev: (200.58, 129.00)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1056)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (71, 642, 1112)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3194)\n[M::mem_pestat] mean and std.dev: (604.85, 612.36)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 4235)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (72, 141, 452)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1212)\n[M::mem_pestat] mean and std.dev: (190.19, 186.09)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1592)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::me\n..\nd.dev: (1, 641)\n[M::mem_pestat] mean and std.dev: (80.42, 66.29)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 839)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 353)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 805)\n[M::mem_pestat] mean and std.dev: (197.65, 125.35)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1031)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (25, 92, 4382)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 13096)\n[M::mem_pestat] mean and std.dev: (1323.10, 2038.07)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 17453)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (63, 103, 239)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 591)\n[M::mem_pestat] mean and std.dev: (108.47, 67.49)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 767)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (55, 132, 231)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 583)\n[M::mem_pestat] mean and std.dev: (121.33, 94.22)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 759)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 358)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 820)\n[M::mem_pestat] mean and std.dev: (199.62, 128.30)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1051)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (165, 551, 1084)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2922)\n[M::mem_pestat] mean and std.dev: (758.28, 788.06)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3911)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (60, 92, 214)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 522)\n[M::mem_pestat] mean and std.dev: (108.60, 68.37)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 676)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (39, 99, 175)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 447)\n[M::mem_pestat] mean and std.dev: (96.27, 75.07)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 583)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 355)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)\n[M::mem_pestat] mean and std.dev: (198.38, 126.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (36, 254, 655)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1893)\n[M::mem_pestat] mean and std.dev: (264.36, 305.20)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 2512)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (91, 615, 1942)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5644)\n[M::mem_pestat] mean and std.dev: (924.59, 980.13)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 7495)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (49, 83, 248)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 646)\n[M::mem_pestat] mean and std.dev: (120.43, 144.51)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 845)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 353)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 805)\n[M::mem_pestat] mean and std.dev: (197.57, 125.24)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1031)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (274, 1478, 3405)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 9667)\n[M::mem_pestat] mean and std.dev: (2234.60, 2469.21)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 12798)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (41, 81, 136)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 326)\n[M::mem_pestat] mean and std.dev: (78.68, 46.41)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 421)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (40, 98, 212)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 556)\n[M::mem_pestat] mean and std.dev: (100.23, 81.55)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 728)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 351)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 799)\n[M::mem_pestat] mean and std.dev: (196.70, 123.65)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1023)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (38, 237, 963)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2813)\n[M::mem_pestat] mean and std.dev: (400.04, 487.83)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3738)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (48, 151, 954)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2766)\n[M::mem_pestat] mean and std.dev: (311.79, 473.96)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3672)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (48, 136, 370)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1014)\n[M::mem_pestat] mean and std.dev: (168.69, 211.74)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1336)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (197.48, 125.16)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (60, 381, 877)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2511)\n[M::mem_pestat] mean and std.dev: (309.96, 300.82)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3328)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (64, 89, 206)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 490)\n[M::mem_pestat] mean and std.dev: (109.25, 78.90)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 632)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (59, 92, 243)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 611)\n[M::mem_pestat] mean and std.dev: (119.36, 106.55)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 795)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 354)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 808)\n[M::mem_pestat] mean and std.dev: (197.65, 125.30)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (32, 109, 852)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2492)\n[M::mem_pestat] mean and std.dev: (351.27, 466.86)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3312)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (66, 134, 1049)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 3015)\n[M::mem_pestat] mean and std.dev: (259.60, 365.36)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3998)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (44, 98, 178)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 446)\n[M::mem_pestat] mean and std.dev: (110.60, 89.50)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 580)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 182, 352)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)\n[M::mem_pestat] mean and std.dev: (197.48, 124.78)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1027)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (27, 527, 989)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2913)\n[M::mem_pestat] mean and std.dev: (618.32, 636.75)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3875)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 89, 199)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 493)\n[M::mem_pestat] mean and std.dev: (112.75, 69.14)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 640)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (42, 64, 127)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 297)\n[M::mem_pestat] mean and std.dev: (69.32, 48.12)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 382)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (126, 182, 352)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 804)\n[M::mem_pestat] mean and std.dev: (197.15, 125.24)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1030)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (57, 201, 1995)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 5871)\n[M::mem_pestat] mean and std.dev: (751.95, 959.31)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 7809)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (52, 103, 197)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 487)\n[M::mem_pestat] mean and std.dev: (107.59, 72.75)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 632)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (47, 103, 884)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 2558)\n[M::mem_pestat] mean and std.dev: (272.87, 415.11)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 3395)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (127, 183, 355)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 811)\n[M::mem_pestat] mean and std.dev: (197.72, 125.63)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1039)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (264, 484, 2305)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6387)\n[M::mem_pestat] mean and std.dev: (1528.29, 1928.34)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 9242)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (74, 176, 481)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1295)\n[M::mem_pestat] mean and std.dev: (239.89, 273.05)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1702)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (53, 97, 287)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 755)\n[M::mem_pestat] mean and std.dev: (110.80, 102.36)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 989)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (126, 182, 353)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 807)\n[M::mem_pestat] mean and std.dev: (197.26, 125.60)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1034)\n[M::mem_pestat] analyzing insert size distribution for orientation RF...\n[M::mem_pestat] (25, 50, 75) percentile: (77, 508, 2209)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 6473)\n[M::mem_pestat] mean and std.dev: (1245.30, 1554.50)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 8605)\n[M::mem_pestat] analyzing insert size distribution for orientation RR...\n[M::mem_pestat] (25, 50, 75) percentile: (49, 116, 341)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 925)\n[M::mem_pestat] mean and std.dev: (107.79, 86.20)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1217)\n[M::mem_pestat] skip orientation FF\n[M::mem_pestat] skip orientation RF\n[M::mem_pestat] skip orientation RR\n[M::mem_pestat] skip orientation FF as there are not enough pairs\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n[M::mem_pestat] (25, 50, 75) percentile: (126, 181, 353)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 807)\n[M::mem_pestat] mean and std.dev: (196.60, 125.13)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 1034)\n[M::mem_pestat] skip orientation RF as there are not enough pairs\n[M::mem_pestat] skip orientation RR as there are not enough pairs\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa mem -t 8 -v 1 -T 30 -h 5 -Y -q localref.fa /galaxy/server/database/objects/9/1/f/dataset_91f910b0-db09-42ec-9e0e-869db5c1e43b.dat /galaxy/server/database/objects/d/0/3/dataset_d032087f-5c51-46fb-93f9-1c2c0d6d545e.dat\n[main] Real time: 4050.945 sec; CPU: 29900.056 sec\n[bam_sort_core] merging from 72 files and 8 in-memory blocks...\n",
        "stdout": "",
        "job_messages": [],
        "dependencies": [],
        "user_email": "tests@fake.org",
        "job_metrics": [
            {
                "title": "Operating System",
                "value": "Linux gxy-galaxy-galaxy-l7tkj-4blpm 5.15.0-1047-gke #52-Ubuntu SMP Mon Nov 13 02:39:43 UTC 2023 x86_64 GNU/Linux\n",
                "plugin": "uname",
                "name": "uname",
                "raw_value": "Linux gxy-galaxy-galaxy-l7tkj-4blpm 5.15.0-1047-gke #52-Ubuntu SMP Mon Nov 13 02:39:43 UTC 2023 x86_64 GNU/Linux\n"
            },
            {
                "title": "Total System Swap",
                "value": "0 bytes",
                "plugin": "meminfo",
                "name": "swaptotal",
                "raw_value": "0E-7"
            },
            {
                "title": "Total System Memory",
                "value": "184.4 GB",
                "plugin": "meminfo",
                "name": "memtotal",
                "raw_value": "198046776.0000000"
            },
            {
                "title": "Processor Count",
                "value": "48",
                "plugin": "cpuinfo",
                "name": "processor_count",
                "raw_value": "48.0000000"
            },
            {
                "title": "Memory softlimit on cgroup",
                "value": "8.0 EB",
                "plugin": "cgroup",
                "name": "memory.soft_limit_in_bytes",
                "raw_value": "9223372036854771712.0000000"
            },
            {
                "title": "Was OOM Killer active?",
                "value": "No",
                "plugin": "cgroup",
                "name": "memory.oom_control.under_oom",
                "raw_value": "0E-7"
            },
            {
                "title": "OOM Control enabled",
                "value": "Yes",
                "plugin": "cgroup",
                "name": "memory.oom_control.oom_kill_disable",
                "raw_value": "0E-7"
            },
            {
                "title": "Max memory usage (MEM+SWP)",
                "value": "30.0 GB",
                "plugin": "cgroup",
                "name": "memory.memsw.max_usage_in_bytes",
                "raw_value": "32211705856.0000000"
            },
            {
                "title": "Memory limit on cgroup (MEM+SWP)",
                "value": "30.0 GB",
                "plugin": "cgroup",
                "name": "memory.memsw.limit_in_bytes",
                "raw_value": "32212254720.0000000"
            },
            {
                "title": "Max memory usage (MEM)",
                "value": "30.0 GB",
                "plugin": "cgroup",
                "name": "memory.max_usage_in_bytes",
                "raw_value": "32211636224.0000000"
            },
            {
                "title": "Memory limit on cgroup (MEM)",
                "value": "30.0 GB",
                "plugin": "cgroup",
                "name": "memory.limit_in_bytes",
                "raw_value": "32212254720.0000000"
            },
            {
                "title": "Failed to allocate memory count",
                "value": 0.0,
                "plugin": "cgroup",
                "name": "memory.failcnt",
                "raw_value": "0E-7"
            },
            {
                "title": "CPU Time",
                "value": "10 hours and 33 minutes",
                "plugin": "cgroup",
                "name": "cpuacct.usage",
                "raw_value": "37981338873852.0000000"
            },
            {
                "title": "Job Runtime (Wall Clock)",
                "value": "2 hours and 22 minutes",
                "plugin": "core",
                "name": "runtime_seconds",
                "raw_value": "8579.0000000"
            },
            {
                "title": "Job End Time",
                "value": "2024-02-12 06:37:29",
                "plugin": "core",
                "name": "end_epoch",
                "raw_value": "1707719849.0000000"
            },
            {
                "title": "Job Start Time",
                "value": "2024-02-12 04:14:30",
                "plugin": "core",
                "name": "start_epoch",
                "raw_value": "1707711270.0000000"
            },
            {
                "title": "Memory Allocated (MB)",
                "value": "32212",
                "plugin": "core",
                "name": "galaxy_memory_mb",
                "raw_value": "32212.0000000"
            },
            {
                "title": "Cores Allocated",
                "value": "8",
                "plugin": "core",
                "name": "galaxy_slots",
                "raw_value": "8.0000000"
            }
        ]
    },
    "status": "ok",
    "server": "http://34.139.129.229:8000/galaxy/",
    "ref_data_size": [],
    "input_data_size": [
        1289376399,
        1289376399
    ]
}